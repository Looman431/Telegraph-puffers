<?php

namespace App\Telegram;

use DefStudio\Telegraph\Facades\Telegraph;
use DefStudio\Telegraph\Handlers\WebhookHandler;
use DefStudio\Telegraph\Keyboard\Button;
use DefStudio\Telegraph\Keyboard\Keyboard;
use DefStudio\Telegraph\Models\TelegraphBot;
use DefStudio\Telegraph\Models\TelegraphChat;
use Illuminate\Support\Facades\Log;

class Handler extends WebhookHandler
{

    public function test(): void{
        $this->chat->message('test')->send();
    }

    public function action(): void{
        $this->chat->message('–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏')
            ->keyboard(
                Keyboard::make()->buttons([
                    Button::make('‚õìÔ∏è –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏')->action('links'),
                    Button::make('ü™™ –î–µ–π—Å—Ç–≤–∏—è')->action('actions'),
                    Button::make('ü§ñ –û –±–æ—Ç–µ')->url('https://github.com/Looman431/Telegraph-puffers'),
                ])
            )->send();
    }

    public function links(): void{
        $this->chat->message('‚õìÔ∏è –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏')
            ->keyboard(
                Keyboard::make()->buttons([
                    Button::make('üëæ –ù–∞—à –¥–∏—Å–∫–æ—Ä–¥')->url('https://discord.gg/RAVKJ3eE'),
                    Button::make('üé´ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º')->url('https://t.me/+GdBTXPtxdh40YmUy'),
                    Button::make('üßø –ù–∞—à —á–∞—Ç –≤ MAX')->action('nahuy'),
                ])
            )->send();
    }

    public function actions(): void{
        $this->chat->message('–ü–æ–∫–∞ —á—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç :(')
        ->keyboard(
            Keyboard::make()->buttons([
                Button::make('–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É')->action('Admin'),
                Button::make('---')->action('first'),
                Button::make('---')->action('second'),
            ])
        )->send();
    }

    public function nahuy(): void{
        $this->chat->message('–ò–¥–∏ –Ω–∞—Ö—É–π')->send();
    }

    public function first(): void{
        $this->chat->message('---')->send();
    }

    public function second(): void{
        $this->chat->message('---')->send();
    }



    //–ù–µ —Ä–∞–±–æ—á–∏–π –∫—É—Å–æ–∫
    public function Admin(): void
    {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º "—Å–æ—Å—Ç–æ—è–Ω–∏–µ", —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É
        Log::info('[BOT] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É"');

        $this->chat->storage()->set('awaiting_admin_message', true);

    }

    public function text(string $text): void
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        if ($this->chat->storage()->get('awaiting_admin_message')) {
            $this->chat->storage()->forget('awaiting_admin_message'); // –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞

            $adminChatId = config('telegram.admin_chat_id'); // <-- –ª—É—á—à–µ –≤ .env

            Telegraph::chat($adminChatId)->message("–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{$this->chat->chat_id}:\n\n$text")->send();

            $this->chat->message('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É.')->send();
            return;
        }

        // –ò–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        Telegraph::message("–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: $this->chat->message")->send();
    }

}
